{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/ConfirmanceDetails.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.callbacks.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, _oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, add_transform, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, is_client, now, raf, set_now, set_raf, globals, destroy_block, outro_and_destroy_block, fix_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, binding_callbacks, schedule_update, tick, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, add_attribute, add_classes, group_outros, check_outros, transition_in, transition_out, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, once, bind, mount_component, destroy_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","<script>\n    import { onMount } from 'svelte';\n    export let levelData;\n\n    let totalNodes = 0;\n    let totalNodesComputed = false;\n    let selectedViolationIdx = -1;\n    let isViolationDetailsSelected = false;\n    let violationType;\n\n    let confirmanceRulesCount;\n    let pageApplicableRulesCount;\n    let pageInapplicableRulesCount;\n    let helpTextFlags = {\n        images: false,\n        links: false\n    }\n\n    let scanQueue = [];\n\tlet scanInProgress = false;\n\n    let ruleCheckIndices = {};\n    let basicChecks = [];\n\n    $: {\n        if(!totalNodesComputed) {\n            basicChecks = visua11yData.basicChecks[levelData.level] || [];\n            let ruleData = axe.getRules();\n            basicChecks.forEach((check, idx) => {\n                check.scanTags.values.forEach(tag => {\n                    if(!ruleCheckIndices[tag]){\n                        ruleCheckIndices[tag] = [];\n                    }\n                    ruleCheckIndices[tag].push(idx);\n                }) \n            });\n            \n            ruleData.forEach(rule => {\n                if(ruleCheckIndices[rule.ruleId]){\n                    ruleCheckIndices[rule.ruleId].forEach(i => {\n                        basicChecks[i].ruleText.push(rule.description);\n                    });\n                }\n            })\n\n            levelData.scanData.passes.forEach(p => {\n                if(ruleCheckIndices[p.id]){\n                    ruleCheckIndices[p.id].forEach(i => {\n                        basicChecks[i].passes =  basicChecks[i].passes + p.nodes.length;\n                    });\n                }\n            });\n            levelData.scanData.incomplete.forEach(p => {\n                if(ruleCheckIndices[p.id]){\n                    ruleCheckIndices[p.id].forEach(i => {\n                        basicChecks[i].violations =  basicChecks[i].violations + p.nodes.length;\n                    });\n                }\n                totalNodes += p.nodes.length;\n                const annotatedElems = document.querySelectorAll('.visua11y-annotate');\n                for(let i=0; i<annotatedElems.length; i++){\n                    const annotatedElem = annotatedElems[i];\n                    if(annotatedElem.parentElement){\n                        //annotatedElem.parentElement.removeChild(annotatedElem);\n                    }\n                }\n                p.nodes.forEach(node => {\n                    const nodeElem = document.querySelector(node.target);\n                    if(nodeElem && nodeElem.className.indexOf('visua11y') == -1){\n                        const annotationElem = document.createElement('div');\n                        annotationElem.innerHTML = nodeElem.nodeName;\n                        annotationElem.className = \"visua11y-annotate\";\n                        if(nodeElem.nodeName !== 'HTML'){\n                            nodeElem.insertAdjacentElement('beforeBegin', annotationElem);\n                        }\n                    }\n                    \n                    node.showHtml = false;\n                })\n            });\n            levelData.scanData.violations.forEach(v => {\n                v.show = false;\n                if(ruleCheckIndices[v.id]){\n                    ruleCheckIndices[v.id].forEach(i => {\n                        basicChecks[i].violations =  basicChecks[i].violations + v.nodes.length;\n                    });\n                }\n                //if(!totalNodesComputed) {\n                    totalNodes += v.nodes.length;\n                    const annotatedElems = document.querySelectorAll('.visua11y-annotate');\n                    for(let i=0; i<annotatedElems.length; i++){\n                        const annotatedElem = annotatedElems[i];\n                        if(annotatedElem.parentElement){\n                            //annotatedElem.parentElement.removeChild(annotatedElem);\n                        }\n                    }\n                    v.nodes.forEach(node => {\n                        const nodeElem = document.querySelector(node.target);\n                        if(nodeElem && nodeElem.className.indexOf('visua11y') == -1){\n                            const annotationElem = document.createElement('div');\n                            annotationElem.innerHTML = nodeElem.nodeName;\n                            annotationElem.className = \"visua11y-annotate\";\n                            if(nodeElem.nodeName !== 'HTML'){\n                                nodeElem.insertAdjacentElement('beforeBegin', annotationElem);\n                            }\n                        }\n                        \n                        node.showHtml = false;\n                    })\n                //}\n            });\n\n            levelData.violations = levelData.scanData.violations\n            totalNodesComputed = true;\n            confirmanceRulesCount = axe.getRules(levelData.scanTags).length;\n            pageInapplicableRulesCount = levelData.scanData.inapplicable.length;\n            pageApplicableRulesCount = confirmanceRulesCount - pageInapplicableRulesCount;\n        }\n\n    }\n\n    function toggleViolationDetails(violation, idx, vioType){\n        violationType = vioType;\n        if(!isViolationDetailsSelected || (idx != -1 && idx !== selectedViolationIdx)){\n            isViolationDetailsSelected = true;\n            selectedViolationIdx = idx;\n        } else if(idx == selectedViolationIdx){\n            isViolationDetailsSelected = false;\n            selectedViolationIdx = -1;\n        }\n    }\n\n    function gotoElement(target){\n        const annotatedElems = document.querySelectorAll('.visua11y-annotate-bg');\n        for(let i=0; i<annotatedElems.length; i++){\n            annotatedElems[i].className = annotatedElems[i].className.replace(' visua11y-annotate-bg', '');\n        }\n        if(target){\n            const ele = document.querySelector(target);\n            if(ele){\n                ele.className = ele.className +' visua11y-annotate-bg';\n                ele.scrollIntoView();\n            }\n        }\n    }\n\n    function showHtml(node){\n        node.showHtml = !node.showHtml;\n        return node.showHtml;\n    }\n\n    function showHelpText(tag, flag){\n        helpTextFlags[tag] = flag\n    }\n</script>\n\n<style>\n    .level-container{\n        padding: 15px;\n        font-size: 14px !important;\n        clear: both;\n    }\n    .level-container code {\n        padding: 2px 4px;\n        font-size: 90%;\n        color: #c7254e;\n        background-color: #f9f2f4;\n        border-radius: 4px;\n    }\n\n    .media-block{\n        padding: 15px;\n        float: left;\n    }\n\n    .level-description{\n        padding: 15px;\n        clear: both;\n    }\n\n    .level-violations{\n        padding: 10px;\n        \n    }\n    .media-block-left{\n        float: left;\n    }\n    .media-block-right{\n        float: right;\n        padding-left: 30px;\n    }\n\n    .media-block-right ul {\n        list-style: initial;\n    }\n\n    .level-violations{\n        clear:both;\n    }\n    .level-violations a {\n        color: white !important;\n        text-decoration: underline !important;\n    }\n\n    .violation-node {\n        padding: 10px;\n        clear: both;\n    }\n\n    .basic-checks-icon i {\n        font-size:30px !important\n    }\n\n    .help-text-popup{\n        position: fixed;\n        background:#09304b;\n        z-index: 999;\n        padding: 10px;\n        left:32%;\n    }\n</style>\n<div class=\"level-container\">\n    <div class=\"media-block\">\n        <div class=\"media-block-left\">\n            <div>\n                {levelData.heading}\n            </div>\n            <div>\n                {levelData.subheading}\n            </div>\n            <div>\n                <a href={levelData.link}\n                    target=\"_blank\"\n                    title={levelData.title}>\n                    <img height=\"32\" width=\"88\"\n                        src={levelData.logo}\n                        alt={levelData.alt}>\n                </a>\n            </div>\n        </div>\n        <div class=\"media-block-right\">\n            <ul>\n                <!-- <li>There are 78 guidelines defined for this confirmance level</li> -->\n                <li>This tool runs {confirmanceRulesCount} rules for this level</li>\n                <li>Only {pageApplicableRulesCount} out of the {confirmanceRulesCount} rules apply to this page</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"level-description\">\n        <div class=\"basic-checks-icon\">\n            {#each basicChecks as checkVal}\n                <div style=\"float: left;padding:15px;\">\n                    {#if helpTextFlags[checkVal.type]}\n                        <div class=\"help-text-popup\">\n                            <div style=\"float:right\">\n                                <a href=\"javascript:void(0)\" on:click={() =>{showHelpText(checkVal.type, false)}}>X</a>\n                            </div>\n                            <div>\n                                <strong>Rules in this:</strong>\n                            </div>\n                            <div style=\"clear:both;\">\n                                <ul style=\"list-style: initial\">\n                                    {#each checkVal.ruleText as rule}\n                                        <li>{rule}</li>\n                                    {/each}\n                                </ul>\n                            </div>\n                        </div>\n                    {/if}\n                    <i class=\"fas {checkVal.icon}\" on:click={() =>{ showHelpText(checkVal.type, true)}}></i> \n                    <div>\n                        Passed: \n                        {#if checkVal.passes > -1}\n                            {checkVal.passes}\n                        {/if}\n                    </div>\n                    <div>\n                        Violated: \n                        {#if checkVal.violations > -1}\n                            {checkVal.violations}\n                        {/if}\n                    </div>\n                    \n                </div>\n            {/each}\n        </div>\n        <div style=\"clear:both\">\n            <span>\n                <i class=\"fas fa-exclamation-circle\"></i>\n                <strong>{totalNodes}</strong> html elements with \n                {#if levelData.scanData.incomplete}\n                    <strong>{levelData.violations.length + levelData.scanData.incomplete.length}</strong> violations\n                {/if}\n                {#if !levelData.scanData.incomplete}\n                    <strong>{levelData.violations.length}</strong> violations\n                {/if}\n            </span>\n        </div>\n        {#each levelData.violations as violation, i}\n            <div class=\"level-violations\">\n                <div>\n                    <i class=\"fas fa-angle-right\"></i>\n                    <strong>{violation.help}</strong> \n                    <a href=\"javascript:void(0)\" on:click={() => toggleViolationDetails(violation, i)}> Details</a>\n                </div> \n                {#if isViolationDetailsSelected && violationType !== 'incomplete' && selectedViolationIdx === i}\n                    {#each violation.nodes as node}\n                        <div class=\"violation-node\">\n                            <div>\n                                Impact: {node.impact}\n                            </div>\n                            <div>\n                                Target: \n                                <a href=\"javascript:void(0)\" on:click={() => gotoElement(node.target)}>\n                                    <code>{node.target}</code>\n                                </a>\n                                <a style=\"padding:10px;\" href=\"javascript:void(0)\" on:click={() => showHtml(node)}> Show html</a>\n                                <a href=\"javascript:void(0)\" on:click={() => gotoElement(node.target)}> Go to element</a>\n                            </div>\n                            {#if false}\n                                <div>\n                                   <code>{node.html}</code>\n                                </div>\n                            {/if}\n                            <div> Fix this:<br/>\n                                <ul>\n                                    {#each node.any as checkedNode}\n                                        <li>\n                                            <i style=\"font-size: 6px;padding-left: 10px;\" class=\"fas fa-minus\"></i>\n                                            {checkedNode.message}\n                                        </li>\n                                    {/each}\n                                </ul> \n                            </div>\n                            <!-- <div> Impact:<br/> {node.impact} </div>\n                            <div> To solve this:<br/>\n                                <ul>\n                                    {#each node.any as checkedNode}\n                                        <li>{checkedNode.message}</li>\n                                    {/each}\n                                </ul> \n                            </div>\n                            <div> Element Target:<br/> <code>{node.target}</code> </div>\n                            <div> Violated Element html:<br/> <code>{node.html}</code> </div>     -->\n                        </div>\n                    {/each}\n                {/if}\n            </div>\n        {/each}\n        {#each levelData.scanData.incomplete as violation, i}\n            <div class=\"level-violations\">\n                <div>\n                    <i class=\"fas fa-angle-right\"></i>\n                    <strong>{violation.help}</strong> \n                    <a href=\"javascript:void(0)\" on:click={() => toggleViolationDetails(violation, i, 'incomplete')}> Details</a>\n                </div> \n                {#if isViolationDetailsSelected && violationType == 'incomplete' && selectedViolationIdx === i}\n                    {#each violation.nodes as node}\n                        <div class=\"violation-node\">\n                            <div>\n                                Impact: {node.impact}\n                            </div>\n                            <div>\n                                Target: \n                                <a href=\"javascript:void(0)\" on:click={() => gotoElement(node.target)}>\n                                    <code>{node.target}</code>\n                                </a>\n                                <a style=\"padding:10px;\" href=\"javascript:void(0)\" on:click={() => showHtml(node)}> Show html</a>\n                                <a href=\"javascript:void(0)\" on:click={() => gotoElement(node.target)}> Go to element</a>\n                            </div>\n                            {#if false}\n                                <div>\n                                   <code>{node.html}</code>\n                                </div>\n                            {/if}\n                            <div> Fix this:<br/>\n                                <ul>\n                                    {#each node.any as checkedNode}\n                                        <li>\n                                            <i style=\"font-size: 6px;padding-left: 10px;\" class=\"fas fa-minus\"></i>\n                                            {checkedNode.message}\n                                        </li>\n                                    {/each}\n                                </ul> \n                            </div>\n                            <!-- <div> Impact:<br/> {node.impact} </div>\n                            <div> To solve this:<br/>\n                                <ul>\n                                    {#each node.any as checkedNode}\n                                        <li>{checkedNode.message}</li>\n                                    {/each}\n                                </ul> \n                            </div>\n                            <div> Element Target:<br/> <code>{node.target}</code> </div>\n                            <div> Violated Element html:<br/> <code>{node.html}</code> </div>     -->\n                        </div>\n                    {/each}\n                {/if}\n            </div>\n        {/each}\n    </div>\n</div>\n\n\n","<svelte:head>\n\t<!-- <script src=\"https://kit.fontawesome.com/7e1024d596.js\"></script> -->\n\t<link rel=\"stylesheet\" href=\"https://vedrag.github.io/visua11ysite/css/all.min.css\">\n\t<style>\n\t\t.visua11y-annotate{\n\t\t\tposition: absolute;\n\t\t\tfont-size: 12px;\n\t\t\tpadding: 2px;\n\t\t\tbackground: #FFAEAE;\n\t\t\tz-index: 8888;\n\t\t}\n\n\t\t.visua11y-annotate-bg{\n\t\t\tborder: 3px dotted#FFAEAE !important;\n\t\t}\n\t</style>\n</svelte:head>\n<script>\n\timport { onMount } from 'svelte';\n\timport ConfirmanceDetails from './ConfirmanceDetails.svelte';\n \n\texport let name;\n\t\n\tlet confirmanceData = [];\n\tlet scanQueue = [];\n\tlet scanInProgress = false;\n\tlet fullContainer = false;\n\tlet levelContainer = false;\n\tlet selectedLevelItem;\n\tfunction toggleContainer(){\n\t\tfullContainer = !fullContainer;\n\t}\n\n\tfunction runScan(item){\n\t\tif(scanInProgress){\n\t\t\tscanQueue.push(item)\n\t\t} else {\n\t\t\tscanInProgress = true;\n\t\t\titem.scanData = {};\n\t\t\taxe.run({ exclude: [['.visua11y', 'button'], ['.visua11y-button']]}, {runOnly: item.scanTags}, (err, results) => {\n\t\t\t\titem.scanData = results;\n\n\t\t\t\tscanInProgress = false;\n\t\t\t\tif(scanQueue.length){\n\t\t\t\t\tconst d = scanQueue.pop();\n\t\t\t\t\trunScan(d);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction toggleLevelDetails(item){\n\t\tif(levelContainer){\n\t\t\tlevelContainer = false;\n\t\t\tselectedLevelItem = undefined;\n\t\t} else {\n\t\t\tselectedLevelItem = item;\n\t\t\tlevelContainer = true;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconst scr = document.createElement('script');\n\t\tscr.src = \"https://vedrag.github.io/visua11ysite/config-data.js?d=\"+Date.now();\n\t\tscr.onload = () => {\n\t\t\tconsole.log('Config data loaded');\n\t\t\tconfirmanceData = visua11yData.confirmanceData;\n\t\t\tconst scr2 = document.createElement('script');\n\t\t\tscr2.src = \"https://vedrag.github.io/visua11ysite/axe.min.js\";\n\t\t\tscr2.onload = () => {\n\t\t\t\tconsole.log('AXE Tools loaded');\n\t\t\t\tconfirmanceData.forEach(item => {\n\t\t\t\t\trunScan(item);\n\t\t\t\t});\n\t\t\t}\n\t\t\tdocument.querySelector('head').appendChild(scr2);\n\t\t}\n \t\tdocument.querySelector('head').appendChild(scr);\n\t});\n</script>\n\n<style>\n\t.visua11y {\n\t\twidth: auto !important;\n\t\theight: auto !important;\n\t\tmax-height: 450px;\n\t\tmax-width: 700px;\n\t}\n\n\t.visua11y{\n\t\tfont-family: Arial, Helvetica, sans-serif !important;\n\t\tcolor: #ffffff !important\n\t}\n\t\n\t.visua11y-toolbar {\n\t\tbackground-color: #09304b !important;\n\t\tcolor: #f2f2f2 !important;\n\t\tposition: fixed !important;\n\t\ttop: auto !important;\n\t\tright: auto !important;\n\t\tbottom: 0 !important;\n\t\tleft: 10px !important;\n\t\tborder-top-left-radius: 5px !important;\n\t\tborder-top-right-radius: 5px !important;\n\t\toverflow: scroll !important;\n\t\tz-index: 9998 !important;\n\t\tfont-family: Arial, Helvetica, sans-serif !important;\n\t}\n\t\n\t.visua11y-main-ctr{}\n\n\t.visua11y-minimised-ctr{\n\t\tfont-size: 28px;\n\t}\n\n\t.visua11y-button{\n\t\tbackground: none;\n\t\tborder-style: none;\n\t\tcolor: white !important;\n\t\tfont-size: inherit !important\n\n\t}\n\n\t.visua11y-main-ctr-minimise{\n\t\tfloat: right;\n\t\tfont-size: 14px; \n\t}\n\t.visua11y-level-ctr{\n\t\tfloat: left;\n\t\tpadding: 20px;\n\t\tmax-width: 20%;\n\t\tfont-size: 14px !important;\n\t}\n\t.visua11y-ctr-link a{\n\t\tfont-weight: bold;\n\t\tcolor: #ffffff !important;\n\t\ttext-decoration: underline !important;\n\t}\n\t\n</style>\n\n<div class=\"visua11y visua11y-toolbar\">\n\t{#if !fullContainer}\n\t\t<div class=\"visua11y-minimised-ctr\">\n\t\t\t<button class=\"visua11y-button\" on:click={toggleContainer}>\n\t\t\t\t<span><i class=\"fas fa-binoculars\"></i></span>\n\t\t\t</button>\n\t\t</div>\n\t{/if}\n\t{#if fullContainer}\n\t\t\t<div class=\"visua11y-main-ctr\">\n\t\t\t\t<div class=\"visua11y-main-ctr-minimise\">\n\t\t\t\t\t{#if levelContainer}\n\t\t\t\t\t\t<strong> \n\t\t\t\t\t\t\t<button class=\"visua11y-button\" on:click={toggleLevelDetails}>\n\t\t\t\t\t\t\t\t<span>back</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<strong> \n\t\t\t\t\t\t<button class=\"visua11y-button\" on:click={toggleContainer}>\n\t\t\t\t\t\t\t<span><i class=\"fas fa-binoculars\"></i></span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</strong>\n\t\t\t\t</div>\n\t\t\t\t{#if levelContainer}\n\t\t\t\t\t<ConfirmanceDetails bind:levelData={selectedLevelItem}></ConfirmanceDetails>\n\t\t\t\t{/if}\n\t\t\t\t{#if !levelContainer}\n\t\t\t\t\t{#each confirmanceData as confirmanceItem}\n\t\t\t\t\t\t<div class=\"visua11y-level-ctr\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong>{confirmanceItem.heading}</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong>{confirmanceItem.subheading}</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<a href={confirmanceItem.link}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\ttitle={confirmanceItem.title}>\n\t\t\t\t\t\t\t\t\t<img height=\"32\" width=\"88\"\n\t\t\t\t\t\t\t\t\t\tsrc={confirmanceItem.logo}\n\t\t\t\t\t\t\t\t\t\talt={confirmanceItem.alt}>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{#if confirmanceItem.scanData && confirmanceItem.scanData.violations}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<i class=\"fas fa-times-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t{#if confirmanceItem.scanData.incomplete}\n\t\t\t\t\t\t\t\t\t\t\t{confirmanceItem.scanData.violations.length + confirmanceItem.scanData.incomplete.length} violations\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t{#if !confirmanceItem.scanData.incomplete}\n\t\t\t\t\t\t\t\t\t\t\t{confirmanceItem.scanData.violations.length} violations\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"visua11y-ctr-link\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" on:click={() => toggleLevelDetails(confirmanceItem)}> Details </a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"visua11y-ctr-link\">\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" on:click={() => runScan(confirmanceItem)}> Run again </a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/if}\n</div>\n\n","import App from './App.svelte';\n\nconst toolbarEle = document.createElement('div');\ntoolbarEle.id = \"visua11y-bar\";\ndocument.querySelector('body').appendChild(toolbarEle);\n\nconst app = new App({\n\ttarget: document.getElementById('visua11y-bar'),\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_style","key","style","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_render","p","ctx","after_render","outroing","outros","group_outros","remaining","callbacks","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","global","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","hydrate","l","Array","from","childNodes","c","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","checkVal","ruleText","click_handler","rule","passes","violations","helpTextFlags","icon","click_handler_1","levelData","scanData","incomplete","violation","nodes","checkedNode","message","impact","any","click_handler_3","click_handler_4","click_handler_5","help","isViolationDetailsSelected","violationType","selectedViolationIdx","click_handler_2","click_handler_7","click_handler_8","click_handler_9","click_handler_6","heading","subheading","basicChecks","confirmanceRulesCount","pageApplicableRulesCount","totalNodes","logo","alt","link","title","gotoElement","annotatedElems","querySelectorAll","className","replace","ele","querySelector","scrollIntoView","showHtml","pageInapplicableRulesCount","totalNodesComputed","images","links","ruleCheckIndices","toggleViolationDetails","idx","vioType","showHelpText","tag","flag","visua11yData","level","ruleData","axe","getRules","check","scanTags","values","ruleId","description","id","parentElement","nodeElem","annotationElem","innerHTML","nodeName","insertAdjacentElement","v","show","inapplicable","toggleContainer","levelContainer","toggleLevelDetails","selectedLevelItem","confirmanceData","confirmanceItem","fullContainer","scanQueue","scanInProgress","runScan","item","exclude","runOnly","err","results","undefined","scr","src","Date","now","onload","console","log","scr2","toolbarEle","getElementById"],"mappings":"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"}